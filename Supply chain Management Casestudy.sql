


### PART A::: Explore The Data

use supply_chain;

-- 1.	Read the data from all tables.

select * from customer;
select * from orderitem;
select * from orders;
select * from product;
select * from supplier;

-- 2.	Find the country wise count of customers.
select country,count(*) cust_count from customer group by country;

-- 3.	Display the products which are not discontinued.
select productname from product where isdiscontinued=0;

-- 4.	Display the list of companies along with the product name that they are supplying.
select sup.companyname,pro.productname
from supplier sup join product pro
on sup.id=pro.supplierid;

-- 5.	Display customer's information who stays in 'Mexico'
select * from customer where country='Mexico';

-- 6.	Display the price of costliest item that is ordered by the customer along with the customer details.
select 
    cus.id,
    cus.firstname,
    cus.lastname,
    cus.city,
    cus.country,
    cus.phone,
    max(orit.unitprice) costliest_item_price
from customer cus 
join 
orders ord on cus.id=ord.customerid
join
 orderitem orit on ord.customerid=orit.orderid
group by
 cus.id,cus.firstname,cus.lastname,cus.city,cus.country,cus.phone;

-- 7.	Display supplier id who owns highest number of products.
select
supplierid,count(distinct productname) as count_pro_name
from product
group by supplierid
order by count_pro_name desc
limit 1 ;

-- 8.	Display month wise and year wise count of the orders placed.
select monthname(orderdate) as month ,year(orderdate) as year,count(ordernumber) as count_orders
from orders
group by month,year;

-- 9.	Which country has maximum suppliers.
select country from supplier
group by country
order by count(id) desc
limit 1;


-- 10. Which customers did not place any order.
select * from customer
where id not in(select customerid from orders);

### PART B::: Know The Business

-- 1.	Arrange the product id, product name based on high demand by the customer.
select pro.id,pro.productname,count(quantity)
from product pro 
left join orderitem ord
on pro.id=ord.productid;

-- 2.	Display the number of orders delivered every year.
select year(orderdate) year,count(id) no_of_orders
from orders
group by year;

-- 3.	Calculate year-wise total revenue.
select year(orderdate) year,sum(totalamount) revenue
from orders
group by year;

-- 4.	Display the customer details whose order amount is maximum including his past orders.
select cus.id,cus.firstname,cus.lastname,max(ord.totalamount) amount
from customer cus
join orders ord
on cus.id=ord.customerid
group by cus.id,cus.firstname,cus.lastname;


-- 5.	Display total amount ordered by each customer from high to low. (donot use sum)
select cus.id,cus.firstname,cus.lastname,ord.totalamount
from customer cus
join orders ord
on cus.id=ord.customerid
order by ord.totalamount desc;

/* A sales and marketing department of this company wants to find out how frequently 
customer have business with them. This can be done in two ways. (Answer Q 6 and Q 7 for the same) */

-- 6 Approach 1. List the current and previous order amount for each customers.

select cus.id,cus.firstname,cus.lastname,ord.totalamount,
lag(ord.totalamount) over(partition by cus.id ) as prev_order_amount
from customer cus join orders ord
on cus.id=ord.customerid;

/* 7. Approach 2. Display the customerid, order ids and the 
order dates along with the previous order date and the next order date for every customer in the table:: */

select 
    ord.customerid,
    ordit.orderid,
    ord.orderdate,
    lag(ord.orderdate) over(order by ord.orderdate) as prev_orderdate,
    lead(ord.orderdate) over(order by ord.orderdate) as next_orderdate
from orders ord 
join orderitem ordit on ord.id=ordit.orderid;

-- 8.	Find out top 3 suppliers in terms of revenue generated by their products.
select sup.companyname,pro.productname,sum(ordit.quantity*ordit.unitprice) revenue
from supplier sup 
join product pro on sup.id=pro.supplierid
join orderitem ordit on pro.supplierid=ordit.productid
group by sup.companyname,pro.productname
order by revenue desc
limit 3;

### PART C::: Business Analysis


-- 1.	Fetch the records to display the customer details who ordered more than 10 products in the single order
select cus.id,cus.firstname,cus.lastname,count(ordit.productid) product_count
from customer cus
join orders ord on cus.id=ord.customerid
join orderitem ordit on ord.customerid=ordit.orderid
group by cus.id,cus.firstname,cus.lastname
having product_count>10;


-- 2.	Display all the product details with the ordered quantity size as 1.
select * from product pro
left join orderitem ordit on pro.id=ordit.productid
where ordit.quantity=1;

-- 3.	Display the compan(y)ies which supplies products whose cost is above 100.
select sup.companyname,pro.productname
from supplier sup 
join product pro
on sup.id=pro.supplierid
where pro.unitprice>100;


-- 4.	Create a combined list to display customers and supplier list as per the below format.

SELECT
    'Customer' AS type,
    concat(firstname,' ',lastname) as contactname,
    city,
    country,
    phone
FROM customer
UNION
SELECT
    'Supplier' AS type,
    contactname,
    city,
    country,
    phone
FROM
    supplier;


-- 5.	Display the customer list who belongs to same city and country arrange in country wise.
select city, country, concat(firstname,' ',lastname) as name, phone
from customer
where (city, country) IN
    (SELECT city, country from customer
              group by city, country
			having count(distinct id) > 1)
order by country, city, name;



### PART D:::

-- 1.	Company sells the product at different discounted rates. Refer actual product price in product table and selling price in the order item table.
--  Write a query to find out total amount saved in each order then display the orders from highest to lowest amount saved. 

select ordit.orderid,sum(abs(ordit.unitprice- pro.unitprice)) as amount_saved
 from orderitem ordit
 join product pro
 on ordit.productid=pro.id
 group by ordit.orderid
 order by profit desc;



-- 2.	Mr. Kavin want to become a supplier. He got the database of "Richard's Supply" for reference. Help him to pick: 
-- a. List few products that he should choose based on demand.

select pro.id,pro.productname,sum(ordit.quantity) total_demand
from product pro join orderitem ordit
on pro.id=ordit.productid
group by pro.id,pro.productname
order by total_demand desc
limit 20;

-- b. Who will be the competitors for him for the products suggested in above questions.
select pro.id,pro.productname,sum(ordit.quantity) total_demand,sup.companyname,sup.id
from product pro join orderitem ordit
on pro.id=ordit.productid
join supplier sup on pro.supplierid=sup.id
group by pro.id,pro.productname,sup.companyname,sup.id
order by total_demand desc
limit 20;


-- 3.	Create a combined list to display customers and suppliers details considering the following criteria 
-- •	Both customer and supplier belong to the same country
-- •	Customer who does not have supplier in their country
-- •	Supplier who does not have customer in their country
SELECT 'Customer' as type, c.id, c.firstname, c.country
FROM customer c
WHERE c.country IN (
    SELECT DISTINCT s.country
    FROM supplier s
)
UNION
SELECT 'Supplier' as type, s.id, s.companyname, s.country
FROM supplier s
WHERE s.country IN (
    SELECT DISTINCT c.country
    FROM customer c
)
UNION
SELECT 'Customer' as type, c.id, c.firstname, c.country
FROM customer c
WHERE c.country NOT IN (
    SELECT DISTINCT s.country
    FROM supplier s
)
UNION
SELECT 'Supplier' as type, s.id, s.companyname, s.country
FROM supplier s
WHERE s.country NOT IN (
    SELECT DISTINCT c.country
    FROM customer c
);



-- 4.	Every supplier supplies specific products to the customers. 
-- Create a view of suppliers and total sales made by their products and write a query on this view to find out top 2 suppliers 
-- (using windows function RANK() in each country by total sales done by the products.

CREATE VIEW SuppliersandSales AS
SELECT
    sup.companyname,
    sup.country,
    pro.productname,
    COUNT(ordit.productid) AS total_sales,
    RANK() OVER (PARTITION BY sup.country ORDER BY COUNT(ordit.productid) DESC) AS `rank`
FROM
    supplier sup
JOIN
    product pro ON sup.id = pro.supplierid
JOIN
    orderitem ordit ON ordit.productid = pro.id
GROUP BY
    sup.companyname, sup.country, pro.productname;

select *
from (select companyname, country, rank() over (partition by country order by total_sales desc) as ranks
    from SuppliersandSales) ranked_data
where ranks<= 2;









